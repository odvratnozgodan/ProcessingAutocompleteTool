<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
<name>keyCode</name>

<category>Input</category>

<subcategory>Keyboard</subcategory>

<type>variable</type>

<example>
<image></image>
<code><![CDATA[
color fillVal = color(126);

void draw() {
  fill(fillVal);
  rect(25, 25, 50, 50);
}

void keyPressed() {
  if (key == CODED) {
    if (keyCode == UP) {
      fillVal = 255;
    } else if (keyCode == DOWN) {
      fillVal = 0;
    } 
  } else {
    fillVal = 126;
  }
}
]]></code>
</example>

<description><![CDATA[
The variable <b>keyCode</b> is used to detect special keys such as the arrow keys (UP, DOWN, LEFT, and RIGHT) as well as ALT, CONTROL, SHIFT, PAGE_UP, PAGE_DOWN, HOME, and END.
<br/><br/>
When checking for these keys, it can be useful to first check if the key is coded. This is done with the conditional <b>if (key == CODED)</b>, as shown in the example above.
<br/><br/>
The keys included in the ASCII specification (BACKSPACE, TAB, ENTER, RETURN, ESC, and DELETE) do not require checking to see if the key is coded; for those keys, you should simply use the <b>key</b> variable directly (and not <b>keyCode</b>).  If you're making cross-platform projects, note that the ENTER key is commonly used on PCs and Unix, while the RETURN key is used on Macs. Make sure your program will work on all platforms by checking for both ENTER and RETURN.
<br/><br/>
For those familiar with Java, the values for UP and DOWN are simply shorter versions of Java's <b>KeyEvent.VK_UP</b> and <b>KeyEvent.VK_DOWN</b>. Other <b>keyCode</b> values can be found in the Java <a href="http://download.oracle.com/javase/6/docs/api/java/awt/event/KeyEvent.html">KeyEvent</a> reference.
]]></description>

</root>
